@model ExpenseReportServer.Models.Connection
@{
    ViewBag.Title = "Database";
    Layout = "~/Views/Home/_menu.cshtml";
    
}

<div class="container-fluid">

    <div class="row-fluid">

        <div class="span3 bs-docs-sidebar">

            <ul class="nav nav-list bs-docs-sidenav affix" id="objects">

                <li><a href="#" onclick=" return false;">Tables<i class="icon-chevron-right"></i></a></li>
                <li><a href="#" onclick=" return false;">Views<i class="icon-chevron-right"></i></a></li>
                <li><a href="#" onclick=" return false;">StoredProcedures<i class="icon-chevron-right"></i></a></li>
                <li><a href="#" onclick=" return false;">Functions<i class="icon-chevron-right"></i></a></li>
                <li><a href="#" onclick=" return false;">Triggers<i class="icon-chevron-right"></i></a></li>

            </ul>

        </div>
        <div class="span9">
            <h4 id="top">Conn: @Model.Name (@Model.Host)</h4>

            <div class="input-append">
                <input class="input-xxlarge" type="text" id="input_sql" />
                <button class="btn btn-primary" type="button" onclick="doSql();">Search</button>
                <button class="btn btn-danger" type="button" onclick="deleteConn(@Model.id);">Remove this Conn</button>
            </div>
            <div class="row-fluid" id="result">
                <div class="button-group" id="btn_summary">
                </div>
                <span id="type" class="label label-info"></span>
                <div class="row-fluid">
                    <table class="table  table-striped table-bordered">
                        <thead>
                            <tr style="background-color: ActiveCaption">
                                <td>Object Id</td>
                                <td>Name</td>
                                <td>Create Date</td>
                                <td>Modify Date</td>
                            </tr>
                        </thead>
                        <tbody id="tables">
                        </tbody>
                    </table>

                    <div class="btn-toolbar">
                        <div class="btn-group">

                            <button class="btn btn-success" onclick="gotoFirst();" data-toggle="tooltip" title data-original-title="Go to first!">First</button>
                            <button class="btn btn-success" onclick="gotoPrev();">Prev</button>
                            <button class="btn btn-info" id="pageIndex">-1/-1</button>
                            <button class="btn btn-success" onclick="gotoNext();">Next</button>
                            <button class="btn btn-success" onclick="gotoLast();">Last</button>

                        </div>
                        <div class="btn-group">
                            <button class="btn">PageSize</button>
                            <a class="btn dropdown-toggle" data-toggle="dropdown" href="#"><span class="caret"></span></a>
                            <ul class="dropdown-menu">
                                <li><a href="#" onclick="setPageSize(10); return false;">10</a></li>
                                <li><a href="#" onclick="setPageSize(20); return false;">20</a></li>
                                <li><a href="#" onclick="setPageSize(50); return false;">50</a></li>
                                <li><a href="#" onclick="setPageSize(100); return false;">100</a></li>
                            </ul>
                            <button class="btn-link" onclick="document.location='#schema';">Structure</button>
                            <button class="btn-link" onclick="document.location='#class_define';">Class Define</button>
                        </div>
                    </div>





                </div>
                <div class="row-fluid" id="schema">
                    <table class="table  table-striped table-bordered">
                        <thead>
                            <tr style="background-color: ActiveCaption">

                                <td>No</td>
                                <td>Name</td>
                                <td>Type</td>
                                <td>Length</td>
                            </tr>

                        </thead>
                        <tbody id="columns">
                        </tbody>
                    </table>
                    <div class="well">
                        <div class="hero unit">
                            <code>
                                <p id="class_define"></p>
                            </code>
                        </div>
                    </div>
                    <div class="btn-group" id="table_control">
                        <button class="btn btn-primary" onclick="showData();">Data</button>
                        <button class="btn btn-primary" onclick="gotoSettings();">Class Settings</button>
                        <button class="btn-link" onclick="document.location='#top';">Go Top</button>
                    </div>

                </div>

            </div>


        </div>

    </div>

</div>

<script>
    var connId = @Model.id;
    var result =null;
    var pageSize = 10;
    var pageIndex = 0;
    var index = -1;
    var pageCount =-1;
    var current_object =null;
    function searchByType(type)
    {
        
        $('#input_sql').val(":type_desc='"+type.id+"'");
        doSql();
    }
    function doSql(){
        var sql = $("#input_sql").val();
        var btn_summary= $("#btn_summary");        
        btn_summary.empty();        
        result=null;
        $("#columns").empty();
       
        $.get("/api/db/search?id="+connId+"&keyword="+sql,"",function(json){
            
            result = json;
            
            for(var i=0;i<json.length;i++){
                var group = json[i];
                var summary="<button class='btn' onclick='showResult("+i+");'>"+group[0].type+"("+group.length+")</button>";
                $(summary).appendTo(btn_summary);
                
            }
            if (json.length>0)
            {
                showResult(0);
                $("#result").show();
            }else{
                $("#result").hide();
            }
        });
    }
    function showResult(type){
        if (type>-1){
            index = type;
            pageIndex=0;
            pageCount =Math.ceil( result[index].length / pageSize);
        }
        var tables = $("#tables");        
        tables.empty();
        var columns = $("#columns");
        columns.empty();
        $("#class_define").empty();
        for(var i=0+pageIndex*pageSize;i<result[index].length && i<(pageIndex+1)*pageSize;i++)
        {
            var item = result[index][i];
            var tr = "<tr><td>"+item.object_id+"</td><td><a href='#' onclick='gotoObject("+index+","+i+"); return false;'>"+formatkeyword(item.name)+"</a></td><td>"+item.create_date+"</td><td>"+item.modify_date+"</td></tr>";
            $(tr).appendTo(tables);
        }
        if (result[index].length>0)
        {
            $("#type").html(result[index][0].type_desc);
        }
        $("#pageIndex").html((pageIndex+1)+"/"+pageCount);
    }
    function gotoFirst()
    {
        pageIndex=0;
        showResult(-1);
    }
    function gotoPrev()
    {
        pageIndex--;
        if (pageIndex<0)
            pageIndex=0;
        showResult(-1);
    }
    function gotoNext()
    {
        pageIndex++;
        if (pageIndex>=pageCount){
            pageIndex = pageCount-1
        }
        showResult(-1);
    }
    function gotoLast()
    {
        pageIndex = pageCount-1;
        showResult(-1);
    }
    function setPageSize(s)
    {
        pageSize=s;
        pageCount =Math.ceil( result[index].length / pageSize);
        pageIndex=0;
        showResult(-1);
    }
    function formatkeyword(name)
    {
        var sql = $("#input_sql").val();
        return name.replace(new RegExp("("+sql+")","ig"),"<font color='red'>$1</font>");
    }
    function getConnection( id)
    {
        alert(id);
    }
    function deleteConn(id)
    {
        var yes = confirm("Are you sure to drop information of this Connection from your local database?");
        
        if (yes)
        {
            
            $.getJSON("/api/db/removeConn/" + id, null, function (json) {
                if (json.status == true)
                {
                    alert("Remove success.");
                    $("#addModal").modal();
                }
            });
        }
    }
    function gotoObject(index,i)
    {
        var columns = $("#columns");
        columns.empty();
        $("#class_define").empty();
        var sqlobject = result[index][i];
        var item_type = sqlobject.type.replace(" ","");
        current_object = sqlobject;
        if (item_type=='U' || item_type=='V'){
            getTable(sqlobject.name,"#columns","#class_define",connId);
            $("#table_control").show();
        }else{
            $("#table_control").hide();
            $.get("/api/db/defination?id="+connId+"&object_id="+sqlobject.object_id,"",function(json){
                if (json.length>0)
                {
                    var item = json[0];
                    var temps = item.definition.replace(new RegExp("\r\n","ig"),"<br/>");
                    $("#class_define").html(temps);
                }
            });
        }
    }
    function getSummary()
    {
        $("#objects").empty();
        $.get("/api/db/summary?id="+connId,"",function(json){
            for(var i=0;i<json.length;i++)
            {
                var item = json[i];
                var li = "<li><a href='#' onclick='searchByType(this); return false;' id="+item.type_desc+"><font color='blue'>"+getNickName(item.type_desc)+"</font>(<font color='red'>"+item.count+"</font>)"+"<i class='icon-chevron-right'></i></a></li>";
                $(li).appendTo("#objects");
            }
        });
    }
    function getNickName(desc){
        if (desc=="CHECK_CONSTRAINT"){
            return "Check Constraint";
        }else if (desc=="CLR_SCALAR_FUNCTION"){
            return "Clr Scalar Function"
        }else if (desc=="CLR_STORED_PROCEDURE"){
            return "Clr Sp"
        }else if (desc=="DEFAULT_CONSTRAINT"){
            return "Default Constraint"
        }else if (desc=="FOREIGN_KEY_CONSTRAINT"){
            return "Foreign Key Constraint"
        }else if (desc=="INTERNAL_TABLE"){
            return "Internal Table"
        }else if (desc=="PRIMARY_KEY_CONSTRAINT"){
            return "Primary Key Constraint"
        }else if (desc=="SERVICE_QUEUE"){
            return "Service Queue"
        }else if (desc=="SQL_INLINE_TABLE_VALUED_FUNCTION"){
            return "Sql Inline Table Valued Function"
        }else if (desc=="SQL_SCALAR_FUNCTION"){
            return "Sql Scalar funciton"
        }else if (desc=="SQL_STORED_PROCEDURE"){
            return "Stored Procedure"
        }else if (desc=="SQL_TABLE_VALUED_FUNCTION"){
            return "Sql Table Valued Function"
        }else if (desc=="SQL_TRIGGER"){
            return "Trigger"
        }else if (desc=="SYSTEM_TABLE"){
            return "Sys Table"
        }else if (desc=="UNIQUE_CONSTRAINT"){
            return "Unique Constraint"
        }else if (desc=="USER_TABLE"){
            return "Table"
        }else if (desc=="VIEW"){
            return "View"
        }else {
            return desc;        
        }
    
    }
    function showData()
    {
        alert("show table or view data");
    }
    function gotoSettings()
    {
       // alert("open new tab");
        window.open("/home/setup?id="+connId+"&name="+current_object.name);
        
    
    }
    getSummary();
    $("#result").hide();
    $("#table_control").hide();

                
    
</script>
